// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String  @unique
  emailVerified String?
  phoneNumber   String  @unique
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  accounts      Account[]
}

model Account {
  id                Int         @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Regions {
  id             Int         @id @default(autoincrement())
  region_id      String
  location       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  routes         Routes[]
  terminal       Terminal[]
}

model Routes {
  id             Int         @id @default(autoincrement())
  from           String
  to             String
  type           String
  price          String
  schedule       String
  ticket         String
  regionId       Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  region         Regions  @relation(fields: [regionId], references: [id])
}

model Terminal {
  id            Int         @id @default(autoincrement())
  region        Regions @relation(fields: [region_id], references: [id])
  region_id     Int
  station       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Hiring {
  id            Int         @id @default(autoincrement())
  company       String
  time          String
  duration      String
  address       String
  pickup        String
  destination   String
  typeofbus     String
  phoneNumber   String
  email         String
  buses         String
  purpose       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
